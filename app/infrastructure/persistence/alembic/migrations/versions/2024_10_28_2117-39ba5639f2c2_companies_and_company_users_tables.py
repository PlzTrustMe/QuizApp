"""companies and company users tables

Revision ID: 39ba5639f2c2
Revises: 854837fa6628
Create Date: 2024-10-28 21:17:29.783135

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "39ba5639f2c2"
down_revision: Union[str, None] = "854837fa6628"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "companies",
        sa.Column(
            "company_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.Column("company_name", sa.String(length=15), nullable=False),
        sa.Column("company_description", sa.String(length=128), nullable=True),
        sa.Column(
            "visibility",
            sa.Enum("HIDDEN", "VISIBLE", name="visibility"),
            nullable=True,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.user_id"],
            name=op.f("fk_companies_owner_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("company_id", name=op.f("pk_companies")),
        sa.UniqueConstraint(
            "company_id", name=op.f("uq_companies_company_id")
        ),
    )
    op.create_table(
        "company_users",
        sa.Column(
            "company_user_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column(
            "role",
            sa.Enum("OWNER", "ADMIN", "MEMBER", name="companyrole"),
            nullable=True,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.company_id"],
            name=op.f("fk_company_users_company_id_companies"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
            name=op.f("fk_company_users_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "company_user_id", name=op.f("pk_company_users")
        ),
        sa.UniqueConstraint(
            "company_user_id", name=op.f("uq_company_users_company_user_id")
        ),
    )
    op.create_unique_constraint(op.f("uq_users_user_id"), "users", ["user_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_users_user_id"), "users", type_="unique")
    op.drop_table("company_users")
    op.drop_table("companies")
    # ### end Alembic commands ###
